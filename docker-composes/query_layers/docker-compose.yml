version: "3"

services:
  postgres:
    image: postgres:9.6
    restart: unless-stopped
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_DB: 'metastore_db'
      POSTGRES_USER: 'hive'
      POSTGRES_PASSWORD: 'password'
    expose:
      - '5433'
    volumes:
      - hive-db:/var/lib/postgresql
    command:
      - '-p'
      - '5433'
    ports:
      - "5433:5433"

  metastore:
    image: apache/hive:3.1.3
    depends_on:
      - postgres
    restart: unless-stopped
    container_name: metastore
    hostname: metastore
    environment:
      DB_DRIVER: postgres
      SERVICE_NAME: 'metastore'
      IS_RESUME: true # ocmment out when running for first time
      SERVICE_OPTS: '-Xmx1G -Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver
                     -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5433/metastore_db
                     -Djavax.jdo.option.ConnectionUserName=hive
                     -Djavax.jdo.option.ConnectionPassword=password'
    ports:
        - '9083:9083'
    volumes:
        - warehouse:/opt/hive/data/warehouse
        # - type: bind
        #   source: ${POSTGRES_LOCAL_PATH}
        #   target: /opt/hive/lib/postgres.jar

  hive-server:
    build: ../../dockerfiles/plugin-installed-services/hive
    image: vijayjangir/hive:3.1.3-ranger-atlas
    container_name: hive-server
    depends_on:
      - metastore
    restart: unless-stopped
    hostname: hive-server
    environment:
      SERVICE_NAME: hiveserver2
      HIVE_SERVER2_THRIFT_PORT: 10000
      SERVICE_OPTS: '-Xmx1G -Dhive.metastore.uris=thrift://metastore:9083'
      IS_RESUME: 'true'
      HADOOP_CLASSPATH: /opt/tez/*:/opt/tez/lib/*
      HADOOP_OPTS: '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005'
    volumes:
      - ./hive/install.properties:/opt/ranger-hive-plugin/install.properties
      - warehouse:/opt/hive/data/warehouse
    ports:
      - "10000:10000"
      - "10002:10002"
      - '5002:5005'
    env_file:
      - ./hive/hive.env

  trino:
    build: ../../dockerfiles/plugin-installed-services/trino
    image: vijayjangir/trino377:ranger2.4.0
    container_name: trino
    restart: always
    hostname: trino
    volumes:
      - warehouse:/opt/hive/data/warehouse
      # - ./trino/lib/nashorn-core-15.4.jar:/usr/lib/trino/lib/nashorn-core-15.4.jar
      # - ./trino/lib/nashorn-core-15.4.jar:/usr/lib/trino/plugin/ranger/nashorn-core-15.4.jar
      - ./trino/lib/nashorn-core-15.4.jar:/usr/lib/trino/ranger-trino-plugin/lib/nashorn-core-15.4.jar
      - ./trino/etc/catalog:/usr/lib/trino/etc/catalog
      - ./trino/etc/config.properties:/usr/lib/trino/etc/config.properties
      - ./trino/etc/jvm.config:/usr/lib/trino/etc/jvm.config
      - ./trino/etc/log.properties:/usr/lib/trino/etc/log.properties
      - ./trino/etc/node.properties:/usr/lib/trino/etc/node.properties
      - ./trino/install.properties:/usr/lib/trino/ranger-trino-plugin/install.properties
    environment:
      SERVICE_PRECONDITION: "postgres-db:5432"
      JAVA_OPTS: '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005'
    ports:
      - "8080:8080"
      - "5003:5005"
    command: "-J -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    # entrypoint: [bash, -c, "sleep 100000"]


volumes:
  warehouse:
  hive-db:

networks:
  default:
    name: ranger-env
    external: true